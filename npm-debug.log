0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'publish' ]
2 info using npm@3.5.2
3 info using node@v8.10.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/media/acer/D/clients/self/npm-modules/async-timer',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /home/acer/.npm/async-timer/1.0.0/package.tgz not in flight; packing
9 info lifecycle async-timer@1.0.0~prepublish: async-timer@1.0.0
10 silly lifecycle async-timer@1.0.0~prepublish: no script for prepublish, continuing
11 verbose tar pack [ '/home/acer/.npm/async-timer/1.0.0/package.tgz',
11 verbose tar pack   '/media/acer/D/clients/self/npm-modules/async-timer' ]
12 verbose tarball /home/acer/.npm/async-timer/1.0.0/package.tgz
13 verbose folder /media/acer/D/clients/self/npm-modules/async-timer
14 verbose addLocalTarball adding from inside cache /home/acer/.npm/async-timer/1.0.0/package.tgz
15 silly cache afterAdd async-timer@1.0.0
16 verbose afterAdd /home/acer/.npm/async-timer/1.0.0/package/package.json not in flight; writing
17 verbose afterAdd /home/acer/.npm/async-timer/1.0.0/package/package.json written
18 silly publish { name: 'async-timer',
18 silly publish   version: '1.0.0',
18 silly publish   description: 'a simple timer that runs a piece of code repeatedly with an interval of n milliseconds, until stopped',
18 silly publish   main: 'index.js',
18 silly publish   scripts: { test: 'node test.js' },
18 silly publish   repository:
18 silly publish    { type: 'git',
18 silly publish      url: 'git+https://github.com/jrkosinski/async-timer.git' },
18 silly publish   keywords: [ 'async', 'timer', 'interval' ],
18 silly publish   author: { name: 'John R. Kosinski' },
18 silly publish   license: 'ISC',
18 silly publish   bugs: { url: 'https://github.com/jrkosinski/async-timer/issues' },
18 silly publish   dependencies: { asyncawait: '^1.0.7' },
18 silly publish   homepage: 'https://github.com/jrkosinski/async-timer#readme',
18 silly publish   readme: 'async-timer\n===========\n\nUse Case\n--------\nYou want some piece of code to run repeatedly, with an n-millisecond wait in between completed runs. The piece of code that you want to run may be asynchronous. Example: every 30 seconds, asynchronously pull an update from a REST API and check for some condition; stop the timer when the condition is true. \n\nInfo\n----\nThe main point of the timer is this: the callback is not guaranteed to be called every n milliseconds, but there is guaranteed to be a wait of n milliseconds between the end of the callback\'s execution, and the next calling of the callback. Optionally works with asyncawait. \n\nHow it Works\n------------\nInstantiate a Timer instance \n- specify an interval (number of milliseconds) \n- specify a callback \n- specify any other (non-required) options \n- start the timer \n- stop the timer when desired \n\nOptions\n------- \nrunFirst: optionally, call the callback immediately upon starting the timer. Otherwise, the callback will be called for the first time, after one interval duration (the default).\n\nAsync Callbacks\n---------------\nFollowing the asyncawait paradigm, if your callback is an awaitable (async()), you can optionally start the timer with startAsync() instead of start(); this will ensure that the wait interval doesn\'t start until execution of the async callback is completely done. \n\nUsage:\n------\n\n### Instantiation\n```javascript\nconst Timer = require(\'interval-timer\'); \n\n//prints \'hi\' every 1000 ms \nconst timer = new Timer(1000, () => { console.log(\'hi\')}); \n\n// - or - \nconst timer = new Timer(1000); \ntimer.setCallback(() => { console.log(\'hi\')});\n```\n\n### Starting\n```javascript\n//if interval && callback already specified \ntimer.start();\n\n//if callback not yet specified (or to change it) \ntimer.start(() => { console.log(\'hi\')});\n\n//call with \'runFirst\' option\ntimer.start(() => { console.log(\'hi\')}, true);\n```\n\n### Change the Interval While Running\n```javascript\n//if interval && callback already specified \ntimer.start();\n\n//increase interval to every minute\ntimer.changeInterval(60000);\n```\n\n### Stop the Timer\n```javascript\nconst duration = timer.stop();\n\nconsole.log (\'timer has run for \' + duration + \' ms\'); \n```\n\n### Run Async Code \n```javascript\nconst Timer = require(\'interval-timer\'); \n\n//asynchronous method \nconst asyncMethod = async(() => {\n    //some asynchronous operation \n});\n\n//call asyncMethod every second\nconst timer = new Timer(1000, () => asyncMethod);\n\n//start timer \ntimer.startAsync(asyncMethod); \n\n```\n',
18 silly publish   readmeFilename: 'README.md',
18 silly publish   gitHead: 'a4f93e0c8872f8d4579051ecb4264c6fddc9103b',
18 silly publish   _id: 'async-timer@1.0.0',
18 silly publish   _shasum: '2c15774eaaa290fad31ff672597adb23a23014e9',
18 silly publish   _from: '.' }
19 verbose getPublishConfig undefined
20 silly mapToRegistry name async-timer
21 silly mapToRegistry using default registry
22 silly mapToRegistry registry https://registry.npmjs.org/
23 silly mapToRegistry uri https://registry.npmjs.org/async-timer
24 verbose publish registryBase https://registry.npmjs.org/
25 silly publish uploading /home/acer/.npm/async-timer/1.0.0/package.tgz
26 verbose request uri https://registry.npmjs.org/async-timer
27 verbose request sending authorization for write operation
28 info attempt registry request try #1 at 10:28:00 PM
29 verbose request using bearer token for auth
30 verbose request id 18562c53be6e3f1f
31 http request PUT https://registry.npmjs.org/async-timer
32 http 403 https://registry.npmjs.org/async-timer
33 verbose headers { date: 'Fri, 13 Jul 2018 15:28:03 GMT',
33 verbose headers   'content-type': 'application/json',
33 verbose headers   'transfer-encoding': 'chunked',
33 verbose headers   connection: 'keep-alive',
33 verbose headers   'set-cookie':
33 verbose headers    [ '__cfduid=d2afd6890754ffa821a7da183b0ae88571531495681; expires=Sat, 13-Jul-19 15:28:01 GMT; path=/; domain=.registry.npmjs.org; HttpOnly' ],
33 verbose headers   'cf-ray': '439cc6eb896683ad-BKK',
33 verbose headers   'expect-ct': 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"',
33 verbose headers   'npm-notice': 'Due to a recent security incident, all user tokens have been invalidated. Please see https://status.npmjs.org/incidents/dn7c1fgrr7ng for more details. To generate a new token, visit https://www.npmjs.com/settings/~/tokens or run "npm login".',
33 verbose headers   server: 'cloudflare',
33 verbose headers   'content-encoding': 'gzip' }
34 warn notice Due to a recent security incident, all user tokens have been invalidated. Please see https://status.npmjs.org/incidents/dn7c1fgrr7ng for more details. To generate a new token, visit https://www.npmjs.com/settings/~/tokens or run "npm login".
35 verbose request invalidating /home/acer/.npm/registry.npmjs.org/async-timer on PUT
36 error publish Failed PUT 403
37 verbose stack Error: You do not have permission to publish "async-timer". Are you logged in as the correct user? : async-timer
37 verbose stack     at makeError (/usr/share/npm/node_modules/npm-registry-client/lib/request.js:264:12)
37 verbose stack     at CachingRegistryClient.<anonymous> (/usr/share/npm/node_modules/npm-registry-client/lib/request.js:252:14)
37 verbose stack     at /usr/share/npm/node_modules/npm-registry-client/lib/request.js:178:7
37 verbose stack     at Gunzip.onEnd (zlib.js:131:5)
37 verbose stack     at emitNone (events.js:111:20)
37 verbose stack     at Gunzip.emit (events.js:208:7)
37 verbose stack     at endReadableNT (_stream_readable.js:1064:12)
37 verbose stack     at _combinedTickCallback (internal/process/next_tick.js:138:11)
37 verbose stack     at process._tickCallback (internal/process/next_tick.js:180:9)
38 verbose statusCode 403
39 verbose pkgid async-timer
40 verbose cwd /media/acer/D/clients/self/npm-modules/async-timer
41 error Linux 4.15.0-23-generic
42 error argv "/usr/bin/node" "/usr/bin/npm" "publish"
43 error node v8.10.0
44 error npm  v3.5.2
45 error code E403
46 error You do not have permission to publish "async-timer". Are you logged in as the correct user? : async-timer
47 error If you need help, you may report this error at:
47 error     <https://github.com/npm/npm/issues>
48 verbose exit [ 1, true ]
